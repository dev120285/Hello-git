package com.shiva.blessing.shiva;

import java.util.Collection;
import java.util.Comparator;
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import java.util.regex.Pattern;



import org.apache.logging.log4j.Logger;
import org.springframework.util.AntPathMatcher;
import org.springframework.util.PathMatcher;

public class PDJFAuthorizationMappingTest implements PathMatcher{
	
	private final AntPathMatcher delegate = new AntPathMatcher();
	private static final Pattern VARIABLE_PATTERN = Pattern.compile("\\{[^/]+?\\}");
	public PDJFAuthorizationMappingTest() {
		super();
		// TODO Auto-generated constructor stub
	}
	
	
	public static final Map<String,String> patternConfigMapper = new LinkedHashMap<>();
	public static final String PATH = "/common/home.xhtml" ;

	static{
	patternConfigMapper.put("/**/*", "authenticated");
	patternConfigMapper.put("/**/signLocation.xhtml", "=hasAllRoles('pd-jpoc-applicant,pd-jpoc-user') and userAttributes['DISTRICT'] == '04'");
	patternConfigMapper.put("/ecms/ecmsStates.xhtml", "evalConditionCode('ECPRSRCND') and hasNoneRoles('pd-jpoc-applicant,pd-jpoc-user') and (sessionAuthzAttributes['ATTR_AZ_ADR_CREATED'] == true)");
	patternConfigMapper.put("/ecms/ecmsPropertySearch.xhtml", "(remoteAddress == '127.0.0.1') and (calendar.get(calendar.DAY_OF_WEEK) == calendar.THURSDAY)");
	}

	
	
	public static void main (String[] args)
	{
		 Set<String> exprList = new HashSet<String>();
		 AntPathMatcher matcher = new AntPathMatcher();
		
			
			Comparator<String> test = matcher.getPatternComparator(PATH);
			
			Map<String, String> treeMap = new TreeMap<String, String>();
			for (String key : patternConfigMapper.keySet()) {	
			test.compare(key, key);
			}
			System.out.println(test);
		}



	@Override
	public boolean isPattern(String path) {
		// TODO Auto-generated method stub
		return false;
	}



	@Override
	public boolean match(String pattern, String path) {
		// TODO Auto-generated method stub
		return false;
	}



	@Override
	public boolean matchStart(String pattern, String path) {
		// TODO Auto-generated method stub
		return false;
	}



	@Override
	public String extractPathWithinPattern(String pattern, String path) {
		// TODO Auto-generated method stub
		return null;
	}



	@Override
	public Map<String, String> extractUriTemplateVariables(String pattern, String path) {
		// TODO Auto-generated method stub
		return null;
	}



	@Override
	public Comparator<String> getPatternComparator(String path) {
		// TODO Auto-generated method stub
		return null;
	}



	@Override
	public String combine(String pattern1, String pattern2) {
		// TODO Auto-generated method stub
		return null;
	}
	
	
	
		
	}



	



	
}
